# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import fixture_pb2 as proto_dot_fixture__pb2


class FixtureServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListFixtures = channel.unary_stream(
        '/statshub.FixtureService/ListFixtures',
        request_serializer=proto_dot_fixture__pb2.Request.SerializeToString,
        response_deserializer=proto_dot_fixture__pb2.Fixture.FromString,
        )


class FixtureServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListFixtures(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FixtureServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListFixtures': grpc.unary_stream_rpc_method_handler(
          servicer.ListFixtures,
          request_deserializer=proto_dot_fixture__pb2.Request.FromString,
          response_serializer=proto_dot_fixture__pb2.Fixture.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'statshub.FixtureService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
